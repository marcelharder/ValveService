// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValveService.Data.Entities;

#nullable disable

namespace ValveService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ValveService.Data.Entities.Valve_Code", b =>
                {
                    b.Property<int>("ValveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Implant_position")
                        .HasColumnType("longtext");

                    b.Property<string>("Model_code")
                        .HasColumnType("longtext");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Vendor_code")
                        .HasColumnType("int");

                    b.Property<string>("Vendor_description")
                        .HasColumnType("longtext");

                    b.Property<string>("countries")
                        .HasColumnType("longtext");

                    b.Property<string>("hospitalId")
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("uk_code")
                        .HasColumnType("longtext");

                    b.Property<string>("us_code")
                        .HasColumnType("longtext");

                    b.HasKey("ValveTypeId");

                    b.ToTable("ValveCodes");
                });

            modelBuilder.Entity("ValveService.Data.Entities.Valve_Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("EOA")
                        .HasColumnType("float");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("VTValveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ValveTypeId")
                        .HasColumnType("int");

                    b.HasKey("SizeId");

                    b.HasIndex("VTValveTypeId");

                    b.ToTable("ValveSizes");
                });

            modelBuilder.Entity("ValveService.Data.Entities.Valve_Size", b =>
                {
                    b.HasOne("ValveService.Data.Entities.Valve_Code", "VT")
                        .WithMany("Valve_size")
                        .HasForeignKey("VTValveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VT");
                });

            modelBuilder.Entity("ValveService.Data.Entities.Valve_Code", b =>
                {
                    b.Navigation("Valve_size");
                });
#pragma warning restore 612, 618
        }
    }
}
